diff --git a/skills-client-integration/skills-int-e2e-test/cypress.json b/skills-client-integration/skills-int-e2e-test/cypress.json
index 52f9451..a87626c 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress.json
+++ b/skills-client-integration/skills-int-e2e-test/cypress.json
@@ -1,5 +1,10 @@
 {
   "baseUrl": "http://localhost:8090",
   "chromeWebSecurity": false,
-  "defaultCommandTimeout": 10000
+  "defaultCommandTimeout": 10000,
+  "projectId": "3yas4t",
+  "retries": {
+    "runMode": 2,
+    "openMode": 0
+  }
 }
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js b/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
index e899916..4761ae5 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
@@ -173,7 +173,7 @@ Cypress.Commands.add("cdClickSubj", (subjIndex, expectedTitle) => {

 Cypress.Commands.add("cdBack", (expectedTitle = 'User Skills') => {
     cy.wrapIframe().find('[data-cy=back]').click()
-    cy.wrapIframe().find('h2').contains(expectedTitle);
+    cy.wrapIframe().contains(expectedTitle);

     // back button should not exist on the home page, whose title is the default value
     if (expectedTitle === 'User Skills'){
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
index 2544edf..0e17dbe 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
@@ -207,7 +207,7 @@ context('Vue Tests', () => {
         cy.get('#SkillsDirectiveErrorwithButton button').click()
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -221,7 +221,7 @@ context('Vue Tests', () => {
         cy.get('#SkillsDirectiveErrorwithInput input').type('h')
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
