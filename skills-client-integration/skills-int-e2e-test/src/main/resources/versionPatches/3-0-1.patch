diff --git a/skills-client-integration/skills-int-client-ng/package.json b/skills-client-integration/skills-int-client-ng/package.json
index 2b35e51..04e41c8 100644
--- a/skills-client-integration/skills-int-client-ng/package.json
+++ b/skills-client-integration/skills-int-client-ng/package.json
@@ -34,7 +34,7 @@
         "bootstrap": "4.5.0",
         "jquery": "3.5.1",
         "js-beautify": "1.10.2",
-        "ngx-highlightjs": "4.1.0-beta",
+        "ngx-highlightjs": "4.1.3",
         "rxjs": "6.5.5",
         "tslib": "2.0.0",
         "zone.js": "0.10.3"
@@ -61,4 +61,4 @@
         "tslint": "6.1.0",
         "typescript": "3.9.5"
     }
-}
\ No newline at end of file
+}
diff --git a/skills-client-integration/skills-int-client-vue/package.json b/skills-client-integration/skills-int-client-vue/package.json
index a69e892..0700b2f 100644
--- a/skills-client-integration/skills-int-client-vue/package.json
+++ b/skills-client-integration/skills-int-client-vue/package.json
@@ -6,7 +6,7 @@
     "scripts": {
         "serve": "vue-cli-service serve",
         "buildDepsAndServe": "cd ../../skills-client-js/ && npm run build && cd ../skills-client-vue/ && npm run build && cd ../skills-client-integration/skills-int-client-vue/ && npm run serve",
-        "licenseDepCheck": "license-checker --production --onlyAllow='MIT;ISC;BSD-3-Clause;Apache-2.0' --summary",
+        "licenseDepCheck": "license-checker --production --onlyAllow='MIT;ISC;BSD-2-Clause;BSD-3-Clause;Apache-2.0' --summary",
         "licenseHeaderCheck": "license-check-and-add check -f '../license-add/license-add-config.json'",
         "licenseHeaderAdd": "license-check-and-add add -f ../license-add/license-add-config.json",
         "licenseCheck": "npm run licenseHeaderCheck && npm run licenseDepCheck ",
diff --git a/skills-client-integration/skills-int-e2e-test/cypress.json b/skills-client-integration/skills-int-e2e-test/cypress.json
index 52f9451..a87626c 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress.json
+++ b/skills-client-integration/skills-int-e2e-test/cypress.json
@@ -1,5 +1,10 @@
 {
   "baseUrl": "http://localhost:8090",
   "chromeWebSecurity": false,
-  "defaultCommandTimeout": 10000
+  "defaultCommandTimeout": 10000,
+  "projectId": "3yas4t",
+  "retries": {
+    "runMode": 2,
+    "openMode": 0
+  }
 }
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
index 4c944c8..b17b00d 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
@@ -207,7 +207,7 @@ context('Angular Tests', () => {
         cy.get('#SkillsDirectiveErrorwithButton button').click()
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -221,7 +221,7 @@ context('Angular Tests', () => {
         cy.get('#SkillsDirectiveErrorwithInput input').type('h')
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -240,7 +240,7 @@ context('Angular Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - summary only', () => {
@@ -257,7 +257,7 @@ context('Angular Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
index 4b4dd85..f3cb810 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
@@ -115,7 +115,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - default options", () => {
@@ -137,7 +137,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - summary only", () => {
@@ -159,7 +159,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - theme", () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
index 5c51e84..c64f0b8 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
@@ -150,7 +150,7 @@ context('React Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - summary only', () => {
@@ -167,7 +167,7 @@ context('React Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
index 2544edf..80124cf 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
@@ -207,7 +207,7 @@ context('Vue Tests', () => {
         cy.get('#SkillsDirectiveErrorwithButton button').click()
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -221,7 +221,7 @@ context('Vue Tests', () => {
         cy.get('#SkillsDirectiveErrorwithInput input').type('h')
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -240,7 +240,7 @@ context('Vue Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('Proxy Skills Display', () => {
@@ -262,7 +262,7 @@ context('Vue Tests', () => {
             // verify that there is no background set
             // cypress always validates against rgb
             cy.wrap(body).find('.skills-page-title-text-color')
-              .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+              .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
         });
 
         cy.visit('/vuejs#/proxyShowSkills')
@@ -287,7 +287,7 @@ context('Vue Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
@@ -409,7 +409,7 @@ context('Vue Tests', () => {
             // verify that there is no background set
             // cypress always validates against rgb
             cy.wrap(body).find('.skills-page-title-text-color')
-              .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+              .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
         });*!/
     })*/
 
@@ -428,7 +428,7 @@ context('Vue Tests', () => {
 
             // navigate to Rank Overview that contains the back button
             cy.wrapIframe().find('[data-cy=myRank]').click();
-            cy.wrapIframe().contains('Rank Overview');
+            cy.wrapIframe().contains('My Rank');
             cy.wrapIframe().find('[data-cy=back]').should('exist');
 
             // now visit the "Report Skills" (external) page
@@ -458,7 +458,7 @@ context('Vue Tests', () => {
 
             // navigate to Rank Overview that contains the back button
             cy.wrapIframe().find('[data-cy=myRank]').click();
-            cy.wrapIframe().contains('Rank Overview');
+            cy.wrapIframe().contains('My Rank');
             cy.wrapIframe().find('[data-cy=back]').should('exist');
 
             // now visit the "Report Skills" (external) page
@@ -468,7 +468,7 @@ context('Vue Tests', () => {
             // switch back to the the client display
             cy.get('[data-cy=userDisplayLink]').click()
             // verify we are still on the Rank Overview page
-            cy.wrapIframe().contains('Rank Overview');
+            cy.wrapIframe().contains('My Rank');
 
             // click the back button and verify that we are still in the
             // client display (Subject page)
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js b/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
index e899916..4761ae5 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
@@ -173,7 +173,7 @@ Cypress.Commands.add("cdClickSubj", (subjIndex, expectedTitle) => {
 
 Cypress.Commands.add("cdBack", (expectedTitle = 'User Skills') => {
     cy.wrapIframe().find('[data-cy=back]').click()
-    cy.wrapIframe().find('h2').contains(expectedTitle);
+    cy.wrapIframe().contains(expectedTitle);
 
     // back button should not exist on the home page, whose title is the default value
     if (expectedTitle === 'User Skills'){
diff --git a/skills-client-integration/skills-int-e2e-test/package.json b/skills-client-integration/skills-int-e2e-test/package.json
index e2e9989..0a6b62f 100644
--- a/skills-client-integration/skills-int-e2e-test/package.json
+++ b/skills-client-integration/skills-int-e2e-test/package.json
@@ -26,8 +26,8 @@
     "backend:start:ci": "java  -Dspring.config.location=classpath:/application.yml,file:serverConfigs/backend_application.properties -jar ../../skills-service/skills-service-*.jar",
     "backend:start:ci:background": "mkdir -p ./target/logs && npm run backend:start:ci | awk '/ClientLoggingController/{ print > \"./target/logs/skills-client.out\" }!/ClientLoggingController/{ print > \"./target/logs/skills-service.out\" }' &",
     "backend:start:release": "java -Dspring.config.location=classpath:/application.yml,file:serverConfigs/backend_application.properties -jar ./target/servicesJars/skills-service-*.jar",
-    "backend:waitToStart": "npx wait-port -v -t 60000 localhost:8080",
-    "backend:resetDb": "java -cp ./db/h2-1.4.200.jar org.h2.tools.RunScript -url jdbc:h2:tcp://localhost:9090/mem:skills -user sa -script ./db/reset.sql",
+    "backend:waitToStart": "npx wait-port -t 60000 localhost:8080",
+    "backend:resetDb": "export PGPASSWORD=skillsPassword && psql -U postgres -h localhost -d skills -f ./db/reset.sql",
     "release": "release-it --dry-run",
     "cyServices:start:skills-service": "npm run backend:start:background && npm run backend:waitToStart && echo 'skill-service started!!'",
     "cyServices:start:skills-service:ci": "npm run backend:start:ci:background && npm run backend:waitToStart && echo 'skill-service started!!'",
diff --git a/skills-client-integration/skills-int-e2e-test/serverConfigs/backend_application.properties b/skills-client-integration/skills-int-e2e-test/serverConfigs/backend_application.properties
index bf14817..2f29b6c 100644
--- a/skills-client-integration/skills-int-e2e-test/serverConfigs/backend_application.properties
+++ b/skills-client-integration/skills-int-e2e-test/serverConfigs/backend_application.properties
@@ -11,10 +11,9 @@
 # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 # See the License for the specific language governing permissions and
 # limitations under the License.
-spring.datasource.url=jdbc:h2:mem:skills
-spring.datasource.driverClassName=org.h2.Driver
-spring.datasource.username=sa
-spring.datasource.password=
+spring.datasource.username = postgres
+spring.datasource.url = jdbc:postgresql://localhost:5432/skills
+spring.datasource.password = skillsPassword
 spring.autoconfigure.exclude=org.springframework.boot.autoconfigure.web.servlet.error.ErrorMvcAutoConfiguration
 
 logging.level.org.springframework.security.web.access.intercept.FilterSecurityInterceptor=DEBUG
