diff --git a/skills-client-integration/skills-int-e2e-test/cypress.json b/skills-client-integration/skills-int-e2e-test/cypress.json
index 52f9451..a87626c 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress.json
+++ b/skills-client-integration/skills-int-e2e-test/cypress.json
@@ -1,5 +1,10 @@
 {
   "baseUrl": "http://localhost:8090",
   "chromeWebSecurity": false,
-  "defaultCommandTimeout": 10000
+  "defaultCommandTimeout": 10000,
+  "projectId": "3yas4t",
+  "retries": {
+    "runMode": 2,
+    "openMode": 0
+  }
 }
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
index 4c944c8..b17b00d 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
@@ -207,7 +207,7 @@ context('Angular Tests', () => {
         cy.get('#SkillsDirectiveErrorwithButton button').click()
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -221,7 +221,7 @@ context('Angular Tests', () => {
         cy.get('#SkillsDirectiveErrorwithInput input').type('h')
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -240,7 +240,7 @@ context('Angular Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - summary only', () => {
@@ -257,7 +257,7 @@ context('Angular Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
index 4b4dd85..f3cb810 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
@@ -115,7 +115,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - default options", () => {
@@ -137,7 +137,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - summary only", () => {
@@ -159,7 +159,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - theme", () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
index 5c51e84..c64f0b8 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
@@ -150,7 +150,7 @@ context('React Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - summary only', () => {
@@ -167,7 +167,7 @@ context('React Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
index 2544edf..7ed52bb 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
@@ -207,7 +207,7 @@ context('Vue Tests', () => {
         cy.get('#SkillsDirectiveErrorwithButton button').click()
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -221,7 +221,7 @@ context('Vue Tests', () => {
         cy.get('#SkillsDirectiveErrorwithInput input').type('h')
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -240,7 +240,7 @@ context('Vue Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('Proxy Skills Display', () => {
@@ -262,7 +262,7 @@ context('Vue Tests', () => {
             // verify that there is no background set
             // cypress always validates against rgb
             cy.wrap(body).find('.skills-page-title-text-color')
-              .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+              .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
         });
 
         cy.visit('/vuejs#/proxyShowSkills')
@@ -287,7 +287,7 @@ context('Vue Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
@@ -409,7 +409,7 @@ context('Vue Tests', () => {
             // verify that there is no background set
             // cypress always validates against rgb
             cy.wrap(body).find('.skills-page-title-text-color')
-              .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+              .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
         });*!/
     })*/
 
@@ -420,7 +420,7 @@ context('Vue Tests', () => {
             cy.backendPost('/api/projects/proj1/skills/Thor', {userId: 'user1', timestamp: Date.now()})
 
             // visit client display
-            cy.visit('/vuejs#/showSkills?refreshPage=false')
+            cy.visit('/vuejs#/showSkills?refreshPage=false&internalBackButton=true')
             cy.wait('@getToken')
 
             cy.wrapIframe().find('[data-cy=back]').should('not.exist');
@@ -447,7 +447,7 @@ context('Vue Tests', () => {
             cy.backendPost('/api/projects/proj1/skills/Thor', {userId: 'user1', timestamp: Date.now()})
 
             // visit client display
-            cy.visit('/vuejs#/showSkills?refreshPage=false')
+            cy.visit('/vuejs#/showSkills?refreshPage=false&internalBackButton=true')
             cy.wait('@getToken')
 
             cy.wrapIframe().find('[data-cy=back]').should('not.exist');
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js b/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
index e899916..4761ae5 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
@@ -173,7 +173,7 @@ Cypress.Commands.add("cdClickSubj", (subjIndex, expectedTitle) => {
 
 Cypress.Commands.add("cdBack", (expectedTitle = 'User Skills') => {
     cy.wrapIframe().find('[data-cy=back]').click()
-    cy.wrapIframe().find('h2').contains(expectedTitle);
+    cy.wrapIframe().contains(expectedTitle);
 
     // back button should not exist on the home page, whose title is the default value
     if (expectedTitle === 'User Skills'){
