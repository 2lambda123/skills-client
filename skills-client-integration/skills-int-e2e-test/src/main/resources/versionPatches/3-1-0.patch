diff --git a/skills-client-integration/skills-int-client-vue/package.json b/skills-client-integration/skills-int-client-vue/package.json
index 77fa41c..4204885 100644
--- a/skills-client-integration/skills-int-client-vue/package.json
+++ b/skills-client-integration/skills-int-client-vue/package.json
@@ -6,7 +6,7 @@
     "scripts": {
         "serve": "vue-cli-service serve",
         "buildDepsAndServe": "cd ../../skills-client-js/ && npm run build && cd ../skills-client-vue/ && npm run build && cd ../skills-client-integration/skills-int-client-vue/ && npm run serve",
-        "licenseDepCheck": "license-checker --production --onlyAllow='MIT;ISC;BSD-3-Clause;Apache-2.0' --summary",
+        "licenseDepCheck": "license-checker --production --onlyAllow='MIT;ISC;BSD-2-Clause;BSD-3-Clause;Apache-2.0' --summary",
         "licenseHeaderCheck": "license-check-and-add check -f '../license-add/license-add-config.json'",
         "licenseHeaderAdd": "license-check-and-add add -f ../license-add/license-add-config.json",
         "licenseCheck": "npm run licenseHeaderCheck && npm run licenseDepCheck ",
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
index 393ec38..ace542b 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/angular.specs.js
@@ -207,7 +207,7 @@ context('Angular Tests', () => {
         cy.get('#SkillsDirectiveErrorwithButton button').click()
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -221,7 +221,7 @@ context('Angular Tests', () => {
         cy.get('#SkillsDirectiveErrorwithInput input').type('h')
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -240,7 +240,7 @@ context('Angular Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - summary only', () => {
@@ -257,7 +257,7 @@ context('Angular Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
index a82b1a6..e951f9c 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/js.specs.js
@@ -116,7 +116,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - default options", () => {
@@ -138,7 +138,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - summary only", () => {
@@ -160,7 +160,7 @@ context("Native JS Tests", () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     });
 
     it("skill display - theme", () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
index 38151c4..5a95fbe 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/react.specs.js
@@ -150,7 +150,7 @@ context('React Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - summary only', () => {
@@ -167,7 +167,7 @@ context('React Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js b/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
index d861deb..32c33e3 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/integration/vue.specs.js
@@ -207,7 +207,7 @@ context('Vue Tests', () => {
         cy.get('#SkillsDirectiveErrorwithButton button').click()
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -221,7 +221,7 @@ context('Vue Tests', () => {
         cy.get('#SkillsDirectiveErrorwithInput input').type('h')
         cy.wait('@postSkill');
         cy.get('@postSkill').then((xhr) => {
-            expect(xhr.status).to.eq(400)
+            expect(xhr.status).to.eq(404)
             expect(xhr.responseBody).to.have.property('explanation').to.eq('Failed to report skill event because skill definition does not exist.')
         });
     })
@@ -240,7 +240,7 @@ context('Vue Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('Proxy Skills Display', () => {
@@ -261,7 +261,7 @@ context('Vue Tests', () => {
             // verify that there is no background set
             // cypress always validates against rgb
             cy.wrapIframe().find('.skills-page-title-text-color')
-                .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+                .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
 
             cy.visit('/vuejs#/proxyShowSkills')
             cy.wait('@getToken2')
@@ -284,7 +284,7 @@ context('Vue Tests', () => {
         // verify that there is no background set
         // cypress always validates against rgb
         cy.wrapIframe().find('.skills-page-title-text-color')
-            .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+            .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
     })
 
     it('skill display - theme', () => {
@@ -407,7 +407,7 @@ context('Vue Tests', () => {
             // verify that there is no background set
             // cypress always validates against rgb
             cy.wrap(body).find('.skills-page-title-text-color')
-              .should('have.css', 'background-color').and('equal', 'rgb(255, 255, 255)');
+              .should('have.css', 'background-color').and('equal', 'rgba(0, 0, 0, 0)');
         });*!/
     })*/
 
@@ -426,7 +426,7 @@ context('Vue Tests', () => {
 
             // navigate to Rank Overview that contains the back button
             cy.wrapIframe().find('[data-cy=myRank]').click();
-            cy.wrapIframe().contains('Rank Overview');
+            cy.wrapIframe().contains('My Rank');
             cy.wrapIframe().find('[data-cy=back]').should('exist');
 
             // now visit the "Report Skills" (external) page
@@ -456,7 +456,7 @@ context('Vue Tests', () => {
 
             // navigate to Rank Overview that contains the back button
             cy.wrapIframe().find('[data-cy=myRank]').click();
-            cy.wrapIframe().contains('Rank Overview');
+            cy.wrapIframe().contains('My Rank');
             cy.wrapIframe().find('[data-cy=back]').should('exist');
 
             // now visit the "Report Skills" (external) page
@@ -466,7 +466,7 @@ context('Vue Tests', () => {
             // switch back to the the client display
             cy.get('[data-cy=userDisplayLink]').click()
             // verify we are still on the Rank Overview page
-            cy.wrapIframe().contains('Rank Overview');
+            cy.wrapIframe().contains('My Rank');
 
             // click the back button and verify that we are still in the
             // client display (Subject page)
diff --git a/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js b/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
index 48da2de..d66fb30 100644
--- a/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
+++ b/skills-client-integration/skills-int-e2e-test/cypress/support/commands.js
@@ -182,7 +182,7 @@ Cypress.Commands.add("cdClickSubj", (subjIndex, expectedTitle) => {
 
 Cypress.Commands.add("cdBack", (expectedTitle = 'User Skills') => {
   cy.wrapIframe().find('[data-cy=back]').click()
-  cy.wrapIframe().find('h2').contains(expectedTitle);
+  cy.wrapIframe().contains(expectedTitle);
 
   // back button should not exist on the home page, whose title is the default value
   if (expectedTitle === 'User Skills') {
